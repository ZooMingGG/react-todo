{"version":3,"sources":["assets/logo.svg","Components/Task/Task.js","Components/TaskInput/TaskInput.js","App.js","index.js"],"names":["Task","props","className","onChange","changeHandler","type","checked","style","textDecoration","title","onClick","deleteTaskHandler","TaskInput","inputHandler","event","setState","input","target","value","addTaks","addTaskHandler","enterHandler","key","state","onKeyPress","this","bind","React","Component","App","id","tasks","forEach","task","done","unshift","length","filter","finishedTasks","unfinishedTasks","src","logo","alt","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f6c0416.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport './Task.css';\r\n\r\nconst Task = props => {\r\n    return (\r\n      <div className=\"Task\">\r\n        <input className=\"task-checkbox\" onChange={props.changeHandler} type=\"checkbox\" checked={props.checked} />\r\n        <p style={{textDecoration: props.checked ? 'line-through' : null}} className=\"task-text\">{props.title}</p>\r\n        <button className=\"task-delete-btn\" onClick={props.deleteTaskHandler}>&times;</button>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport './TaskInput.css';\r\n\r\nclass TaskInput extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        input: ''\r\n      }\r\n    }\r\n\r\n    inputHandler = event => {\r\n      this.setState({\r\n        input: event.target.value\r\n      });\r\n    }\r\n\r\n    addTaks = title => {\r\n      this.props.addTaskHandler(title);\r\n\r\n      this.setState({input: ''});\r\n    }\r\n\r\n    enterHandler = event => {\r\n      if (event.key === 'Enter') {\r\n        this.addTaks(this.state.input);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"TaskInput\"> \r\n          <input className=\"input\" onKeyPress={this.enterHandler} onChange={this.inputHandler} value={this.state.input} type=\"text\" />\r\n          <button className=\"add-task-btn\" onClick={this.addTaks.bind(this, this.state.input)}>+</button>\r\n        </div>\r\n      );\r\n    }\r\n};\r\n\r\nexport default TaskInput;\r\n","import React from 'react'\nimport logo from './assets/logo.svg';\nimport './App.css';\nimport Task from './Components/Task/Task';\nimport TaskInput from './Components/TaskInput/TaskInput';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [\n        {id: 0, title: 'Learn React', done: true},\n        {id: 1, title: 'Learn Angular', done: true},\n        {id: 2, title: 'Learn Vue', done: false}\n      ]\n    }\n  }\n\n  changeHandler = id => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.done = !task.done;\n      }\n    })\n\n    this.setState({tasks});\n  }\n\n  addTaskHandler = title => {\n    if (title) {\n      const tasks = [...this.state.tasks];\n\n      tasks.unshift({\n        id: this.state.tasks.length ? this.state.tasks.length : 0,\n        title: title,\n        done: false\n      });\n\n      this.setState({tasks});\n    }\n  }\n\n  deleteTaskHandler = id => {\n    const tasks = [...this.state.tasks.filter(task => task.id !== id)];\n\n    this.setState({tasks});\n  }\n\n  render() {\n    const finishedTasks = this.state.tasks.filter(task => task.done);\n    const unfinishedTasks = this.state.tasks.filter(task => !task.done);\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"active-tasks\">Active Tasks: {unfinishedTasks.length}</div>\n        <TaskInput addTaskHandler={this.addTaskHandler} />\n        { [...unfinishedTasks, ...finishedTasks].map((task, index) => {\n          return (\n            <Task \n              key={index}\n              checked={task.done}\n              changeHandler={this.changeHandler.bind(this, task.id)}\n              deleteTaskHandler={this.deleteTaskHandler.bind(this, task.id)}\n              title={task.title} \n            />\n          );\n        }) }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}